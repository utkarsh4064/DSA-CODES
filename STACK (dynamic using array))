//CODE IN C THAT DEALS WITH ALL OPERATIONS OF STACK IN HEAP MEMORY 

# include <iostream>

using namespace std;

struct stack {
    int size;
    int top;
    int *p;
}st;

void push() {
    if(st.top==st.size-1) {
        cout<<"no more elements can be pushed, stack overflow\n";
    }
    else{
        int data;
        cout<<"enter the data to be pushed\n";
        cin>>data;
        st.top++;
        st.p[st.top]=data;
    }
}

void pop() {
    if(st.top == -1){
        cout<<"stack underflow\n";
    }
    else{
        cout<<"element popped is: "<<st.p[st.top];
        st.top--;
    }
}

void display() {
     if(st.top == -1){
        cout<<"no element to display\n";
    }
    else{
        cout<<"elements are: \n";
        for(int i=0; i<=st.top; i++){
           cout<<st.p[i]<<"\n"; 
        }
    }
}

void emptyFull() {
    if(st.top == -1)
    {
        cout<<"stack is empty\n";
    }
    else if(st.top==st.size-1){
        cout<<"stack is full\n";
    }
    else{
        cout<<"neither full nor empty\n";
    }
}

void peek() {
    if(st.top == -1)
    {
        cout<<"stack is empty\n";
    }
    else {
        int peekValue;
        cout<<"enter the location to peek\n";
        cin>>peekValue;
        if(peekValue >=st.size){
            cout<<"wrong location\n";
        }
        else{
            cout<<"element present at desired location is: "<<st.p[peekValue]<<"\n";
        }
    }
}

void top() {
    if(st.top == -1)
    {
        cout<<"stack is empty\n";
    }
    else{
        cout<<st.p[st.top]<<"\n";
    }
}

int main() {
    st.top=-1;
    cout<<"enter the size of the stack\n";
    cin>>st.size;
    st.p= new int[st.size];
    int opt=0;
    while(opt!=7) {
    cout<<"\n\nenter your choice:\n1: push\n2: pop\n3: display\n4: empty or full\n5: peek\n6: top\n7: exit\n";
    cin>>opt;
    switch (opt) {
        case 1: push(); break;
        case 2: pop(); break;
        case 3: display(); break;
        case 4: emptyFull(); break;
        case 5: peek(); break;
        case 6: top(); break;
        case 7: cout<<"EXITING THE MENU, THANK YOU SO MUCH\n"; break;
        default: cout<<"WRONG CHOICE PLEASE CHOOSE ONLY AMONG AVAILABLE OPTIONS\n"; break;
                 }
        }
    display();
}
