#include <iostream>
using namespace std;

int top=-1;

void push(int ar[], int n) {
    if(top==n-1) {
        cout<<"stack is full, overflow condition\n";
    }
    else{
        int data;
        cout<<"enter the data\n";
        cin>>data;
        top++;
        ar[top]=data;
    }
}

void pop(int ar[], int n) {
    if(top==-1) {
        cout<<"stack is empty, underflow condition\n";
    }
    else {
        cout<<"element popped out is"<<ar[top]<<"\n";
        top--;
    }
}

void peek(int ar[], int n) {
    if(top==-1) {
        cout<<"stack is empty\n";
    }
    else {
    int location;
    cout<<"enter the location at which you want to know the location\n";
    cin>>location;
    if(location >top) {
        cout<<"no element is present at such location, try some other location\n";
    }
    else{
        cout<<ar[location]<<"\n";
    }
    }
}

void checkTop(int ar[], int n) {
    if(top==-1) {
        cout<<"stack is empty\n";
    }
    else {
        cout<<ar[top]<<"\n";
    }
}

void fullEmpty(int n) {
   if(top==-1){
       cout<<"stack is empty\n";
   } 
   else if(top==n-1){
       cout<<"stack is full\n";
   }
   else{
       cout<<"stack is neither full or empty\n";
   }
}

void display(int ar[], int n){
    if(top==-1) {
        cout<<"stack is empty\n";
    }
    else{
        cout<<"elements in the stack till now is: \n";
        for(int i=0; i<=top; i++){
            cout<<ar[i]<<" ";
        }
        cout<<"\n";
    }
}

int main() {
    int n;
    cout<<"enter the size of stack\n";
    cin>>n;
    int ar[n]; int c=-1;
    while(c!=0) {
    cout<<"press 1 for push\npress 2 for pop\npress 3 for peek\n press 4 for Top element\n press 5 for isEmpty or isFull\npress 6 for display\npress 7 for exiting";
    int opt;
    cin>>opt;
    switch(opt) {
        case 1:
        push(ar,n);
        break;
        case 2:
        pop(ar,n);
        break;
        case 3:
        peek(ar,n);
        break;
        case 4:
        checkTop(ar,n);
        break;
        case 5:
        fullEmpty(n);
        break;
        case 6:
        display(ar,n);
        break;
        case 7:
        c=0;
        cout<<"EXITING THE MENU\n";
        break;
        default:
        cout<<"wrong choice, choose only among mentioned options\n";
        break;
    }
    }
    display(ar,n);
}